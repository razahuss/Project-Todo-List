(()=>{"use strict";class e{constructor(e,t){this.description=e,this.dueDate=t}get getDescription(){return this.description}get getDueDate(){return this.dueDate}set setDescription(e){this.description=e}set setDueDate(e){this.dueDate=e}}const t=(t,n,d)=>{t.innerHTML="";const c=document.createElement("p");c.innerHTML=n,t.appendChild(c);const i=document.createElement("div");t.appendChild(i);const o=document.createElement("button");o.innerHTML="+Add Task",o.addEventListener("click",(()=>{l()})),t.appendChild(o);const a=document.createElement("div");t.appendChild(a);const r=e=>{i.innerHTML="";for(let t=0;t<e.length;t++){let n=document.createElement("div");n.classList.add("item"),n.innerHTML=e[t].getDescription+"   "+e[t].getDueDate,i.appendChild(n),n.addEventListener("click",(()=>{let e=d.indexOf(d[t]);d.splice(e,1),r(d),console.log("removed")}))}};r(d);const l=()=>{a.innerHTML="";const t=document.createElement("form");a.appendChild(t);const n=document.createElement("input");n.setAttribute("type","text"),t.appendChild(n);const c=document.createElement("input");c.setAttribute("type","date"),t.appendChild(c);const i=document.createElement("button");i.innerHTML="add",i.addEventListener("click",(t=>{(t=>{let i=n.value,o=c.value,l=new e(i,o);d.push(l),console.log(d),a.innerHTML="",r(d),t.preventDefault()})(t)})),t.appendChild(i)}},n=e=>{const t=new Date;return e.getDate()==t.getDate()&&e.getMonth()==t.getMonth()&&e.getFullYear()==t.getFullYear()},d=e=>{const t=new Date,n=t.getDate(),d=t.getDay(),c=new Date(t.setDate(n-d)),i=new Date(c);return i.setDate(i.getDate()+6),e>=c&&e<=i};let c=[];const i=document.querySelector(".container"),o=document.querySelector(".container"),a=document.querySelector(".projects"),r=document.querySelector(".formParentDiv"),l=[];document.getElementById("inbox").addEventListener("click",(()=>{t(o,"Inbox",l)})),document.getElementById("today").addEventListener("click",(()=>{((e,t,d)=>{e.innerHTML="";const c=document.createElement("p");c.innerHTML="Today",e.appendChild(c);const i=document.createElement("div");e.appendChild(i),i.innerHTML="";for(let e=0;e<d.length;e++)if(console.log(d[e].getDueDate),n(new Date(d[e].getDueDate+"T00:00:00"))){let t=document.createElement("div");t.classList.add("item"),t.innerHTML=d[e].getDescription+"   "+d[e].getDueDate,i.appendChild(t)}})(o,0,l)})),document.getElementById("week").addEventListener("click",(()=>{((e,t,n)=>{e.innerHTML="";const c=document.createElement("p");c.innerHTML="Week",e.appendChild(c);const i=document.createElement("div");e.appendChild(i),i.innerHTML="";for(let e=0;e<n.length;e++)if(console.log(n[e].getDueDate),d(new Date(n[e].getDueDate+"T00:00:00"))){let t=document.createElement("div");t.classList.add("item"),t.innerHTML=n[e].getDescription+"   "+n[e].getDueDate,i.appendChild(t)}})(o,0,l)})),document.getElementById("add-project").addEventListener("click",(()=>{((e,n)=>{e.innerHTML="";const d=document.createElement("form");e.appendChild(d);const o=document.createElement("input");o.setAttribute("type","text"),d.appendChild(o);const a=document.createElement("button");a.innerHTML="Add",d.appendChild(a),a.addEventListener("click",(d=>{const a=document.createElement("button");a.innerHTML=o.value;const r=[];a.addEventListener("click",(()=>{t(i,o.value,r)})),n.appendChild(a),c.push(a),e.innerHTML="",d.preventDefault()}))})(r,a)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,